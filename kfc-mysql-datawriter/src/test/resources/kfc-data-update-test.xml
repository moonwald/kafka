<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/integration/kafka
        http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.0.xsd"
       default-lazy-init="true"
       default-init-method="init"
       default-destroy-method="dispose">

    <context:annotation-config />
    <context:component-scan base-package="com.aldogrand.kfc">
        <context:include-filter type="regex" expression=".*Event"/>
    </context:component-scan>

    <context:property-placeholder location="classpath:kfc-data-process.properties"/>

    <bean id="kfcDS" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy" lazy-init="false">
        <property name="defaultAutoCommit" value="${jdbc.autocommit}" />
        <property name="targetDataSource">
            <bean class="org.apache.commons.dbcp.BasicDataSource" lazy-init="false" destroy-method="close">
                <property name="driverClassName" value="${jdbc.driverClassName}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}" />
                <property name="password" value="${jdbc.password}" />
            </bean>
        </property>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="kfcDS" />
        <property name="persistenceUnitName" value="persistence-dataprocessor" />
        <property name="persistenceXmlLocation" value="classpath:/META-INF/dataprocessor-persistence.xml" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="${jdbc.hibernate.generateDdl}" />
                <property name="showSql" value="${jdbc.hibernate.showSql}" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.id.new_generator_mappings">${hibernate.id.new_generator_mappings:true}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache:false}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache:false}</prop>
                <prop key="hibernate.cache.use_minimal_puts">${hibernate.cache.use_structured_entries:true}</prop>
                <prop key="hibernate.generate_statistics">${hibernate.cache.generate_statistics:true}</prop>
                <prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries:true}</prop>
            </props>
        </property>
    </bean>
    <tx:annotation-driven transaction-manager="txManager" />
    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Kafka Producer -->
    <bean id="kafkaProducerProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="metadata.broker.list">${kafka.metadata.broker.list}</prop>
                <prop key="serializer.class">${kafka.serializer.class}</prop>
                <prop key="key.serializer.class">${kafka.key.serializer.class}</prop>
                <prop key="producer.type">${kafka.producer.type}</prop>
                <prop key="partitioner.class">${kafka.partitioner.class}</prop>
                <prop key="request.required.acks">${kafka.request.required.acks}</prop>
            </props>
        </property>
    </bean>

    <bean id="KFCEventFactory" class="com.aldogrand.kfc.msg.KFCEventFactoryImpl" />
    <bean id="topicGenerator" class="com.aldogrand.kfc.kafka.generator.TopicGeneratorImpl"/>
    <bean id="keyEventGenerator" class="com.aldogrand.kfc.kafka.generator.KeyGeneratorImpl"/>

    <bean id="kafkaProducer" class="com.aldogrand.kfc.msg.producer.kafka.KafkaProducer">
        <constructor-arg name="topicGenerator" ref="topicGenerator"/>
        <constructor-arg name="keyGenerator" ref="keyEventGenerator"/>
        <constructor-arg name="properties" ref="kafkaProducerProperties" type="java.util.Properties"/>
    </bean>

    <bean id="kfcKafkaProducer" class="com.aldogrand.kfc.producer.KFCProducerImpl"/>

    <bean id="connectorDao" class="com.aldogrand.sbpc.dataaccess.jpa.ConnectorDaoJpaImpl" />
    <bean id="sourceEventDao" class="com.aldogrand.sbpc.dataaccess.jpa.SourceEventDaoJpaImpl" />
    <bean id="sourceMarketDao" class="com.aldogrand.sbpc.dataaccess.jpa.SourceMarketDaoJpaImpl" />
    <bean id="sourceRunnerDao" class="com.aldogrand.sbpc.dataaccess.jpa.SourceRunnerDaoJpaImpl" />

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />


    <!-- Integration components -->
    <int:channel id="kafka"/>
    <int:splitter input-channel="kafka" output-channel="input" ref="kafkaSplitter" method="splitKafkaMessage"/>

    <int:channel id="input"/>
    <int:transformer input-channel="input" output-channel="requests" ref="jsonToKFCEventTransformer" method="transform"/>

    <int:channel id="requests"/>
    <int:outbound-channel-adapter channel="requests" ref="dataProcessService" method="process"/>

    <bean id="kafkaSplitter" class="com.aldogrand.kfc.consumer.Splitter"/>

    <bean id="jsonToKFCEventTransformer" class="com.aldogrand.kfc.consumer.JSONToKFCEventTransformer">
        <property name="objectMapper">
            <bean class="org.codehaus.jackson.map.ObjectMapper"/>
        </property>
    </bean>
    
    <bean id="valueDecoder" class="com.aldogrand.kfc.consumer.MessageDecoder"/>

    <int-kafka:inbound-channel-adapter id="kafkaInboundChannelAdapter"
                                       kafka-consumer-context-ref="consumerContext" auto-startup="true" channel="kafka" group-id="data-processor">
        <int:poller fixed-delay="50" time-unit="MILLISECONDS" />
    </int-kafka:inbound-channel-adapter>

    <int:service-activator input-channel="errorChannel" ref="errorHandler" method="handleError"/>
    <bean id="errorHandler" class="com.aldogrand.kfc.error.ErrorHandler"/>
        
    
	<int:channel id="LMAXInputChannelDataProcessor"/>
    <bean id="LMaxDataProcessorService" class="com.aldogrand.kfc.lmax.LMAXServiceImpl" destroy-method="destroy">
		<constructor-arg name="numThreads" value="3" />
		<constructor-arg name="channel" ref="dataProcessorInputChannel" />
		<constructor-arg name="bufferSize" value="65536" />
	</bean>
	<int:service-activator input-channel="LMAXInputChannelDataProcessor" ref="LMaxDataProcessorService" method="onData"/>

	<int:channel id="dataProcessorInputChannel"/>
	<int:service-activator input-channel="dataProcessorInputChannel" output-channel="processed-requests" ref="dataProcessService" method="process"/>
	
 	<!-- Data Process Service Service -->
    <bean id="dataProcessService" class="com.aldogrand.kfc.services.impl.DataProcessServiceImpl">
        <constructor-arg name="connectorDao" ref="connectorDao" />
        <constructor-arg name="sourceEventDao" ref="sourceEventDao" />
        <constructor-arg name="sourceMarketDao" ref="sourceMarketDao" />
        <constructor-arg name="sourceRunnerDao" ref="sourceRunnerDao" />
    </bean>
    
    
	<int:channel id="processed-requests">
	</int:channel>
	<int:service-activator input-channel="processed-requests"
		ref="processDataWriterService" method="update">
	</int:service-activator>
		
    <!-- Processed Data Writer Service -->
    <bean id="processDataWriterService" class="com.aldogrand.kfc.services.mysql.impl.ProcessDataWriterServiceImpl">
        <property name="kafkaPublisher" ref="kfcKafkaProducer"/>
        <property name="eventDao" ref="eventDao" />
        <property name="marketDao" ref="marketDao" />
        <property name="runnerDao" ref="runnerDao" />
    </bean>
</beans>