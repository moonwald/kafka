<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka-1.0.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd"
       default-lazy-init="true"
       default-init-method="init"
       default-destroy-method="dispose">

    <context:annotation-config />
    <context:property-placeholder location="classpath:kfc-mysql-datawriter-test.properties"/>

	<!-- Set any System properties that are required to configure other beans -->
	<bean id="systemPropertyConfigurator" class="com.aldogrand.kfc.utils.configuration.SystemPropertyConfiguratorBean"
	      lazy-init="false">
		<property name="properties">
			<props>
				<!-- Ehcache properties -->
				<prop key="net.sf.ehcache.disabled">${ehcache.disabled}</prop>
				<prop key="ehcache.heap.max">${ehcache.heap.max}</prop>
                <prop key="ehcache.bigmem.max">${ehcache.bigmem.max}</prop>
				<prop key="ehcache.logging">${ehcache.logging}</prop>
				<prop key="ehcache.statistics">${ehcache.statistics}</prop>
				<prop key="ehcache.host">${ehcache.host}</prop>
				<prop key="ehcache.multicast.address">${ehcache.multicast.address}</prop>
				<prop key="ehcache.multicast.port">${ehcache.multicast.port}</prop>
				<prop key="ehcache.rmi.port">${ehcache.rmi.port}</prop>
				<prop key="ehcache.rmi.remoteObjectPort">${ehcache.rmi.remoteObjectPort}</prop>				
                <prop key="ehcache.management.enabled">${ehcache.management.enabled}</prop>
                <prop key="ehcache.management.port">${ehcache.management.port}</prop>
			</props>
		</property>
	</bean>
		
    <bean class="com.aldogrand.kfc.datawriter.KafkaLocalServer">
        <property name="port" value="9092"/>
        <property name="zkPort" value="${zk-connect}"/>
    </bean>



    <int-kafka:zookeeper-connect id="zookeeperConnect"
                                 zk-connect="localhost:9092" zk-connection-timeout="6000" zk-session-timeout="6000"
                                 zk-sync-time="2000" />


    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!-- depends-on="sbpc-hz"> -->
        <property name="dataSource" ref="dataSource" />
        <property name="persistenceUnitName" value="persistence-datawriter" />
        <property name="persistenceXmlLocation" value="classpath:/META-INF/datawriter-persistence.xml" />
        <property name="jpaDialect">
            <bean class="com.aldogrand.kfc.utils.database.IsolationAwareHibernateJpaDialect" />
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="${jdbc.hibernate.generateDdl}" />
                <property name="showSql" value="false" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
               <prop key="hibernate.dialect">${jdbc.hibernate.dialect:org.hibernate.dialect.H2Dialect}</prop>
                <prop key="hibernate.id.new_generator_mappings">${jdbc.hibernate.id.new_generator_mappings:false}</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache:true}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache:true}</prop>
                <prop key="hibernate.cache.use_minimal_puts">true</prop>
                <prop key="hibernate.generate_statistics">${hibernate.cache.generate_statistics:true}</prop>
                <prop key="hibernate.cache.use_structured_entries">true</prop>
                <prop key="net.sf.ehcache.configurationResourceName">/${ehcache.config.file}</prop>
            </props>
        </property>
    </bean>

    <!-- Platform MBeanServer -->
    <bean id="mbeanServer" class="java.lang.management.ManagementFactory"
          factory-method="getPlatformMBeanServer" />

    <!-- Register Hibernate for monitoring -->
    <bean id="hibernateEntityManagerFactoryStatisticsRegistrationBean"
          class="com.aldogrand.kfc.utils.database.HibernateJmxRegistrationBean"
          lazy-init="false">
        <property name="mbeanServer" ref="mbeanServer" />
        <property name="hibernateEntityManagerFactory" ref="entityManagerFactory" />
        <property name="factoryName" value="sbpc-entity-manager-factory" />
    </bean>

    <bean id="kfcKafkaProducer" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="com.aldogrand.kfc.interfaces.KFCProducer" />
    </bean>

    <!-- ******************************************************************* -->
    <!-- * Transaction Management                                          * -->
    <!-- ******************************************************************* -->

    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="txManager" />
    <!-- ******************************************************************* -->
    <!-- * DataAccessObjects (DAOs)                                        * -->
    <!-- ******************************************************************* -->

    <bean id="accountDao" class="com.aldogrand.sbpc.dataaccess.jpa.AccountDaoJpaImpl" />

    <bean id="betDao" class="com.aldogrand.sbpc.dataaccess.jpa.BetDaoJpaImpl" />

    <bean id="bettingPlatformDao" class="com.aldogrand.sbpc.dataaccess.jpa.BettingPlatformDaoJpaImpl" />

    <bean id="connectorDao" class="com.aldogrand.sbpc.dataaccess.jpa.ConnectorDaoJpaImpl" />

    <bean id="eventDao" class="com.aldogrand.sbpc.dataaccess.jpa.EventDaoJpaImpl" />

    <bean id="gFeedMidPointDao" class="com.aldogrand.sbpc.dataaccess.jpa.GFeedMidPointDaoJpaImpl" />

    <bean id="gFeedSettingDao" class="com.aldogrand.sbpc.dataaccess.jpa.GFeedSettingDaoJpaImpl" />

    <bean id="marketDao" class="com.aldogrand.sbpc.dataaccess.jpa.MarketDaoJpaImpl" />

    <bean id="metaTagDao" class="com.aldogrand.sbpc.dataaccess.jpa.MetaTagDaoJpaImpl" />

    <bean id="offerDao" class="com.aldogrand.sbpc.dataaccess.jpa.OfferDaoJpaImpl" />

    <bean id="participantDao" class="com.aldogrand.sbpc.dataaccess.jpa.ParticipantDaoJpaImpl" />

    <bean id="positionDao" class="com.aldogrand.sbpc.dataaccess.jpa.PositionDaoJpaImpl" />

    <bean id="priceDao" class="com.aldogrand.sbpc.dataaccess.jpa.PriceDaoJpaImpl" />

    <bean id="runnerDao" class="com.aldogrand.sbpc.dataaccess.jpa.RunnerDaoJpaImpl" />

    <bean id="sourceEventDao" class="com.aldogrand.sbpc.dataaccess.jpa.SourceEventDaoJpaImpl" />

    <bean id="sourceMarketDao" class="com.aldogrand.sbpc.dataaccess.jpa.SourceMarketDaoJpaImpl" />

    <bean id="sourceRunnerDao" class="com.aldogrand.sbpc.dataaccess.jpa.SourceRunnerDaoJpaImpl" />

    <bean id="sourceEventIncidentDao" class="com.aldogrand.sbpc.dataaccess.jpa.SourceEventIncidentDaoJpaImpl" />

    <bean id="reportJobInfoDao" class="com.aldogrand.sbpc.dataaccess.jpa.ReportJobInfoDaoJpaImpl" />

    <bean id="settledBetDao" class="com.aldogrand.sbpc.dataaccess.jpa.SettledBetDaoJpaImpl" />

    <!-- Processed Data Writer Service -->
    <bean id="processDataWriterService" class="com.aldogrand.kfc.services.mysql.impl.ProcessDataWriterServiceImpl">
        <property name="eventDao" ref="eventDao" />
        <property name="marketDao" ref="marketDao" />
        <property name="runnerDao" ref="runnerDao" />
    </bean>

    <!-- Data Source Configuration -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy"
          lazy-init="false">
        <property name="targetDataSource">
            <bean class="org.apache.commons.dbcp.BasicDataSource" lazy-init="false" destroy-method="close">
                <property name="driverClassName" value="${jdbc.driverClassName}" />
                <property name="url" value="${jdbc.url}" />
                <property name="username" value="${jdbc.username}" />
                <property name="password" value="${jdbc.password}" />
                <property name="initialSize" value="${jdbc.pool.min}" />
                <property name="maxIdle" value="${jdbc.pool.idle}" />
                <property name="maxActive" value="${jdbc.pool.max}" />
                <property name="maxWait" value="${jdbc.pool.wait}" />
                <property name="defaultAutoCommit" value="true" />
            </bean>
        </property>
    </bean>
        <!-- Error Channel -->
    <int:service-activator input-channel="errorChannel" ref="errorHandler" method="handleError"/>
    <bean id="errorHandler" class="com.aldogrand.kfc.error.ErrorHandler"/>

		<int:channel id="KafkaProducerChannel">
		<int:interceptors>
			<int:wire-tap channel="wireTapChannel" />
		</int:interceptors>
	</int:channel>
	<int:service-activator input-channel="KafkaProducerChannel"
		ref="kfcKafkaProducer" method="send" />
			<int:logging-channel-adapter id="wireTapChannel"
		expression="'payload: ' + getPayload()" level="DEBUG" logger-name="WIRETAP" />
</beans>
